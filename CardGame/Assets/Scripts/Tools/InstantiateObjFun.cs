//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

public class InstantiateObjFun
{
		public InstantiateObjFun ()
		{
		}

	/// <summary>
	/// Adds the one object to parent.
	/// 拷贝原始预设并添加到相应地方;
	/// </summary>
	/// <returns>The one object to parent.</returns>
	/// <param name="OriginalObj">Original object.</param>
	/// <param name="trans">Trans.</param>
	public static T AddOneObjToParent<T>(GameObject OriginalObj,Transform trans)where T : MonoBehaviour
	{
		GameObject temObj = GameObject.Instantiate(OriginalObj) as GameObject;
		if(trans != null)
		{
			temObj.transform.SetParent (trans, false);
		}

		temObj.transform.SetAsLastSibling ();
		temObj.transform.localScale = Vector3.one;
		temObj.gameObject.SetActive(true);
		if(temObj.GetComponent<T>() != null)
		{
			return temObj.GetComponent<T>();
		}
		return  temObj.AddComponent<T>();
	}

	public static T AddOneObjToParent<T>(GameObject OriginalObj,Transform trans,int SiblingIndex)where T : MonoBehaviour
	{
		GameObject temObj = GameObject.Instantiate(OriginalObj) as GameObject;
		
		temObj.transform.SetParent (trans, false);
		temObj.transform.SetSiblingIndex (SiblingIndex);
		temObj.gameObject.SetActive(true);
		if(temObj.GetComponent<T>() != null)
		{
			return temObj.GetComponent<T>();
		}
		return  temObj.AddComponent<T>();
	}
}

