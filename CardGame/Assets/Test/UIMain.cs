using UnityEngine;
using System.Collections;
using UnityEngine.UI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using DG.Tweening;

using UnityEngine.EventSystems;

public class UIMain :UIBehaviour
{
	private Image image = null;
	void Start () 
	{
		//让TimeScale = 0
//		Time.timeScale = 0;

		 image = transform.Find("Image").GetComponent<Image>();
		//调用DOmove方法来让图片移动
		Tweener tweener = image.rectTransform.DOMove(Vector3.zero,1f);
		//设置这个Tween不受Time.scale影响
		tweener.SetUpdate(true);
		//设置移动类型
		tweener.SetEase(Ease.Linear);
//		tweener.OnComplete();
//		tweener.onComplete = delegate() {
//			Debug.Log("移动完毕事件");
//		};
//		image.material.DOFade(0,1f).onComplete = delegate() {
//			Debug.Log("褪色完毕事件");
//		};
	}
	 

	public Color toColor;

	Tween colorTween, emissionTween, offsetTween;
	
	public void BtnClick_Start()
	{
		Material mat = image.GetComponent<Renderer>().material;

		// COLOR
		colorTween = mat.DOColor(toColor, 1).SetLoops(-1, LoopType.Yoyo).Pause();

		// EMISSION
		// Note that the float value you see in Unity's inspector, next to the emission's color,
		// doesn't really exist in the shader (it's generated by Unity's inspector and applied to the material's color),
		// se we have to tween the full _EmissionColor.
		emissionTween = mat.DOColor(new Color(0, 0, 0, 0), "_EmissionColor", 1).SetLoops(-1, LoopType.Yoyo).Pause();

		// OFFSET
		// In this case we set the loop to Incremental and the ease to Linear, because it's cooler
		offsetTween = mat.DOOffset(new Vector2(1, 1), 1).SetEase(Ease.Linear).SetLoops(-1, LoopType.Incremental).Pause();
	}

	private void OnDrag(GameObject go){
		Debug.Log(go.name);

	}
}
